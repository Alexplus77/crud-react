{"version":3,"sources":["components/Card.jsx","components/Form.jsx","components/Cards.jsx","App.js","index.js"],"names":["Card","content","id","handleRemove","className","onClick","Form","refresh","useState","value","setValue","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","onSubmit","onChange","target","Cards","data","setData","isRefresh","setIsRefresh","isLoading","setIsLoading","setTimeout","useEffect","console","log","role","length","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAceA,EAZF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,aAC3B,OACE,sBAAKC,UAAU,OAAf,UACE,mBACEC,QAAS,kBAAMF,EAAaD,IAC5BE,UAAU,qBACV,cAAY,SAEd,oBAAGA,UAAU,UAAb,cAAyBH,SCoBhBK,EA3BF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAIMC,EAAe,SAACC,GACpBA,EAAEC,iBACFC,MAAM,8BAA+B,CACnCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAElB,QAASQ,MAC/BW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC/BZ,EAAS,IACTH,KAEF,OACE,uBAAMgB,SAAUZ,EAAcP,UAAU,OAAxC,UACE,0BAAUK,MAAOA,EAAOe,SAjBP,SAACZ,GACpBF,EAASE,EAAEa,OAAOhB,UAiBhB,yBAAQL,UAAU,WAAWmB,SAAUZ,EAAvC,UACG,IACD,mBAAGP,UAAU,sBAAsB,cAAY,gBC4CxCsB,EAhED,WACZ,MAAwBlB,mBAAS,MAAjC,mBAAOmB,EAAP,KAAaC,EAAb,KACA,EAAkCpB,oBAAS,GAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAAkCtB,oBAAS,GAA3C,mBAAOuB,EAAP,KAAkBC,EAAlB,KAEMzB,EAAU,WACdyB,GAAa,GACbC,YAAW,WACTD,GAAa,GACbF,GAAcD,KACb,MAELK,qBAAU,WACRpB,MAAM,+BACHM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACO,GACLC,EAAQD,GACRQ,QAAQC,IAAIT,QAEf,CAACE,IAEJ,IAAM1B,EAAe,SAACD,GACpBY,MAAM,+BAAD,OAAgCZ,GAAM,CACzCa,OAAQ,WAEPK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACO,GACLpB,QAGN,OACE,sBAAKH,UAAU,QAAf,UACE,sBAAKA,UAAU,QAAf,UACG,IADH,QAEQ,IACL2B,EACC,qBAAK3B,UAAU,4BAA4BiC,KAAK,SAAhD,SACE,sBAAMjC,UAAU,UAAhB,0BAGF,wBAAQA,UAAU,cAAlB,SACE,mBAAGC,QAASE,EAASH,UAAU,gBAAgB,cAAY,cAIjE,qBAAKA,UAAU,kBAAf,UACG,OAACuB,QAAD,IAACA,OAAD,EAACA,EAAMW,QAAP,OAGCX,QAHD,IAGCA,OAHD,EAGCA,EAAMY,KAAI,gBAAGtC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,GAAZ,OACR,cAAC,EAAD,CAEEA,GAAIA,EACJD,QAASA,EACTE,aAAcA,GAHTD,MAJT,mBAAGE,UAAU,UAAb,yGAYJ,yCACA,cAAC,EAAD,CAAMG,QAASA,QCtDNiC,MARf,WACE,OACE,qBAAKpC,UAAU,YAAf,SACE,cAAC,EAAD,O,MCDNqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.421376d6.chunk.js","sourcesContent":["import \"App.css\";\nimport React from \"react\";\nconst Card = ({ content, id, handleRemove }) => {\n  return (\n    <div className=\"card\">\n      <i\n        onClick={() => handleRemove(id)}\n        className=\"fa fa-times-circle\"\n        aria-hidden=\"true\"\n      />\n      <p className=\"content\"> {content}</p>\n    </div>\n  );\n};\nexport default Card;\n","import React, { useState } from \"react\";\nimport \"App.css\";\n\nconst Form = ({ refresh }) => {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:8080/notes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ content: value }),\n    }).then((response) => response.json());\n    setValue(\"\");\n    refresh();\n  };\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <textarea value={value} onChange={handleChange} />\n      <button className=\"btn-send\" onSubmit={handleSubmit}>\n        {\" \"}\n        <i className=\"fa fa-space-shuttle\" aria-hidden=\"true\" />\n      </button>\n    </form>\n  );\n};\nexport default Form;\n","import \"App.css\";\nimport Card from \"./Card\";\nimport Form from \"./Form\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Cards = () => {\n  const [data, setData] = useState(null);\n  const [isRefresh, setIsRefresh] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const refresh = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n      setIsRefresh(!isRefresh);\n    }, 2000);\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:8080/notes\")\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        console.log(data);\n      });\n  }, [isRefresh]);\n\n  const handleRemove = (id) => {\n    fetch(`http://localhost:8080/notes/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        refresh();\n      });\n  };\n  return (\n    <div className=\"cards\">\n      <div className=\"title\">\n        {\" \"}\n        Notes{\" \"}\n        {isLoading ? (\n          <div className=\"spinner-grow text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        ) : (\n          <button className=\"btn-refresh\">\n            <i onClick={refresh} className=\"fa fa-refresh\" aria-hidden=\"true\" />\n          </button>\n        )}\n      </div>\n      <div className=\"container-cards\">\n        {!data?.length ? (\n          <i className=\"message\">Пока записей нет...</i>\n        ) : (\n          data?.map(({ content, id }) => (\n            <Card\n              key={id}\n              id={id}\n              content={content}\n              handleRemove={handleRemove}\n            />\n          ))\n        )}\n      </div>\n      <i>New Note</i>\n      <Form refresh={refresh} />\n    </div>\n  );\n};\nexport default Cards;\n","import \"App.css\";\nimport Cards from \"./components/Cards\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}