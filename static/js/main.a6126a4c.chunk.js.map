{"version":3,"sources":["App.js","components/Card.jsx","components/Form.jsx","components/Loading.jsx","pages/PageCards.jsx","index.js"],"names":["App","className","Card","content","id","handleRemove","onClick","Form","handleSubmit","handleChange","value","onSubmit","onChange","required","disabled","Loading","role","url","PageCards","useState","setValue","data","setData","isRefresh","setIsRefresh","isLoading","setIsLoading","refresh","setTimeout","useEffect","fetch","then","response","json","catch","e","console","log","method","length","map","preventDefault","headers","body","JSON","stringify","target","trim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAQeA,EALH,kBACV,qBAAKC,UAAU,YAAf,SACE,cAAC,EAAD,O,eCQWC,EAXF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,aAAhB,OACX,sBAAKJ,UAAU,OAAf,UACE,mBACEK,QAAS,kBAAMD,EAAaD,IAC5BH,UAAU,qBACV,cAAY,SAEd,oBAAGA,UAAU,UAAb,cAAyBE,SCGdI,EAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAA/B,OACX,uBAAMC,SAAUH,EAAcP,UAAU,OAAxC,UACE,0BAAUS,MAAOA,EAAOE,SAAUH,EAAcI,UAAU,IAC1D,yBAAQZ,UAAU,WAAWU,SAAUH,EAAcM,UAAWJ,EAAhE,UACG,IACD,mBAAGT,UAAU,sBAAsB,cAAY,gBCDtCc,EANC,kBACd,qBAAKd,UAAU,4BAA4Be,KAAK,SAAhD,SACE,sBAAMf,UAAU,UAAhB,2BCEEgB,EAAM,+BA4FGC,EA1FG,WAChB,MAA0BC,mBAAS,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAAwBD,mBAAS,MAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KA6BMC,EAAU,WACdD,GAAa,GACbE,YAAW,WACTF,GAAa,GACbF,GAAcD,KACb,MAELM,qBAAU,WAjCRC,MAAMb,GACHc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACV,GACLC,EAAQD,MAETa,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QA8B3B,CAACZ,IAEJ,IAAMlB,EAAe,SAACD,GACpB0B,MAAMb,EAAMb,EAAI,CACdkC,OAAQ,WAEPP,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,WACJJ,OAEDO,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAE9B,OACE,sBAAKlC,UAAU,QAAf,UACE,sBAAKA,UAAU,QAAf,UACG,IADH,QAEQ,IACLwB,EACC,cAAC,EAAD,IAEA,wBAAQxB,UAAU,cAAlB,SACE,mBAAGK,QAASqB,EAAS1B,UAAU,gBAAgB,cAAY,cAIjE,qBAAKA,UAAU,kBAAf,UACG,OAACoB,QAAD,IAACA,OAAD,EAACA,EAAMkB,QAAP,OAGClB,QAHD,IAGCA,OAHD,EAGCA,EAAMmB,KAAI,gBAAGrC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,GAAZ,OACR,cAAC,EAAD,CAEEA,GAAIA,EACJD,QAASA,EACTE,aAAcA,GAHTD,MAJT,mBAAGH,UAAU,UAAb,yGAYJ,yCACA,cAAC,EAAD,CACEO,aAjEe,SAAC2B,GACpBA,EAAEM,iBACFX,MAAMb,EAAK,CACTqB,OAAQ,OACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE1C,QAASO,MAE/BqB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MAC5Bf,EAAS,IACTO,KAsDIlB,aAtEe,SAAC,GAA2B,IAAfC,EAAc,EAAxBoC,OAAUpC,MAChCA,EAAMqC,QAAU3B,EAASV,IAsErBA,MAAOA,QCtFfsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a6126a4c.chunk.js","sourcesContent":["import \"App.css\";\nimport { PageCards } from \"index\";\n\nconst App = () => (\n  <div className=\"container\">\n    <PageCards />\n  </div>\n);\nexport default App;\n","import \"App.css\";\nimport React from \"react\";\nconst Card = ({ content, id, handleRemove }) => (\n  <div className=\"card\">\n    <i\n      onClick={() => handleRemove(id)}\n      className=\"fa fa-times-circle\"\n      aria-hidden=\"true\"\n    />\n    <p className=\"content\"> {content}</p>\n  </div>\n);\n\nexport default Card;\n","import \"App.css\";\n\nconst Form = ({ handleSubmit, handleChange, value }) => (\n  <form onSubmit={handleSubmit} className=\"form\">\n    <textarea value={value} onChange={handleChange} required={true} />\n    <button className=\"btn-send\" onSubmit={handleSubmit} disabled={!value}>\n      {\" \"}\n      <i className=\"fa fa-space-shuttle\" aria-hidden=\"true\" />\n    </button>\n  </form>\n);\n\nexport default Form;\n","const Loading = () => (\n  <div className=\"spinner-grow text-primary\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </div>\n);\n\nexport default Loading;\n","import \"App.css\";\nimport { Card, Form, Loading } from \"../components\";\nimport React, { useEffect, useState } from \"react\";\n\nconst url = \"http://localhost:8080/notes/\";\n\nconst PageCards = () => {\n  const [value, setValue] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [isRefresh, setIsRefresh] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = () => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n      })\n      .catch((e) => console.log(e));\n  };\n  const handleChange = ({ target: { value } }) => {\n    value.trim() && setValue(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ content: value }),\n    })\n      .then((response) => response.json())\n      .catch((e) => console.log(e));\n    setValue(\"\");\n    refresh();\n  };\n\n  const refresh = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n      setIsRefresh(!isRefresh);\n    }, 2000);\n  };\n  useEffect(() => {\n    fetchData();\n  }, [isRefresh]);\n\n  const handleRemove = (id) => {\n    fetch(url + id, {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then(() => {\n        refresh();\n      })\n      .catch((e) => console.log(e));\n  };\n  return (\n    <div className=\"cards\">\n      <div className=\"title\">\n        {\" \"}\n        Notes{\" \"}\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <button className=\"btn-refresh\">\n            <i onClick={refresh} className=\"fa fa-refresh\" aria-hidden=\"true\" />\n          </button>\n        )}\n      </div>\n      <div className=\"container-cards\">\n        {!data?.length ? (\n          <i className=\"message\">Пока записей нет...</i>\n        ) : (\n          data?.map(({ content, id }) => (\n            <Card\n              key={id}\n              id={id}\n              content={content}\n              handleRemove={handleRemove}\n            />\n          ))\n        )}\n      </div>\n      <i>New Note</i>\n      <Form\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        value={value}\n      />\n    </div>\n  );\n};\nexport default PageCards;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport PageCards from \"../src/pages/PageCards\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nexport { PageCards };\n"],"sourceRoot":""}